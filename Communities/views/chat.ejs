<!DOCTYPE html>

<head>
    <link href="/css/chat.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">


</head>

<body>
    <div class='navbar'>
        <div class="leftLinks">
            <h3>Community</h3>
            <a id="home" href="/">Home</a>
        </div>
        <div class="search">
            <form action="/search" method="POST">
                <input name="search" id="search" placeholder="Search for Communities!">
            </form>
        </div>
        <div class="rightLinks">
            <a id="settings">Settings</a>
            <a id="account">Account</a>
            <form action=" /signout" method="POST">
                <button>Sign Out</button>
            </form>
        </div>
    </div>
    <div class="col">
        <h1>Welcome to <%=name%>'s Chatroom</h1>
        <div class="sidebar">
            <div>

                <a class="link" href=<%="/community/:" +id%>>Community Home</a>
                <a class="link" href=<%="/chat/:" +id%>>Chatroom</a>
                <a class="link" href=<%="/forum/:" +id%>>Forum</a>
                <a class="link" href="#">Members</a>
                <a class="link" href=<%="/createRoom/:" +id+"/:"+roomName%>>Create Room</a>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="row">
            <div id="chat" class="card text-white bg-dark mb-3" style="max-width: 40rem; min-height: 25rem;">
                <div class="card-header">Community</div>
                <div class="card-body" style="width: 100%">
                    <h5 id="roomTitle" class="card-title">
                        <%=roomName%>
                    </h5>
                    <div class="row">
                        <div id="cc" class=' container'>
                            <div id="room-container" class="col-2" style="overflow: scroll;">















                            </div>

                            <div id="textBox" class="col-10 chat-text" style="overflow: scroll; max-height: 15rem;">


                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <form class="submit " style="width: 100rem;">
                        <input id='msg' type=" text" style="width:100%">
                        <button class="btn btn-primary">Send</button>
                    </form>
                </div>

            </div>
        </div>
    </div>
    </div>


    <%if(status ==1){%>
    <div class="card border-light mb-3" style="max-width: 18rem; margin:auto">
        
        <div class="card-header">
            <%=name%>
        </div>
        
        <div class="card-body">
            <h5 class="card-title">Create Room</h5>
            <form id="create" class="create" style="display:flex;">
                <input id="sub" placeholder="Room Name" type="text" name="name">
                <button class="btn btn-primary">Create</button>
            </form>
        </div>
       
    </div>
    <%}%>













    <script src="/socket.io/socket.io.js"></script>
    <script>
        var cc = document.querySelector('#cc')
        var username = '<%-username%>'
        var socket = io();
        var roomName = '<%-roomName%>'
        var rooms = [];
        var rc = document.querySelector('#room-container')
        socket.on('fetch', (Rooms) => {
            console.log('test')
            rooms = Rooms
            console.log('rooms: ',rooms)
        })

        var create = document.querySelector('.create')
        create.addEventListener('submit', (e) => {
            e.preventDefault()
            //console.log(socket.sockets)
            console.log(e.target.elements.sub.value)
            socket.emit('createRoom', roomName, e.target.elements.sub.value)
            roomName = e.target.elements.sub.value
            document.querySelector('#roomTitle').innerHTML = roomName
            //socket.emit('fetch')
            rc.remove()
            rc = document.createElement('div')
            rc.id = 'room-container'
            cc.appendChild(rc)
            for (var i = 0; i < rooms.length; i++) {

                var div = document.createElement('div')
                rc.appendChild(div)
                var r = document.createElement('button')
                r.innerHTML = rooms[i]
                r.onclick = function (e) {
                    console.log('joining ', e.target.innerHTML)
                    socket.emit('join', roomName, e.target.innerHTML)
                    roomName = e.target.innerHTML
                    //socket.emit('fetch',e.target.innerHTML)
                    document.querySelector('#roomTitle').innerHTML = roomName
                }
                div.appendChild(r)
            }

        })






        var form = document.querySelector('.submit')
        form.addEventListener('submit', (e) => {
            e.preventDefault();

            const msg = e.target.elements.msg.value
            socket.emit('chatMessage', formatMessage(username, msg), roomName)
            console.log('sending to ',roomName)
            e.target.elements.msg.value = ''
            e.target.elements.msg.focus
        })

        socket.on("connect", () => {
            socket.emit("homeConnect", '<%-id%>')
            var h1 = document.createElement('h1')
            h1.innerHTML = '<%-id%>'
            document.body.appendChild(h1)
        })
        socket.on('message', (message) => {
            console.log(message)
            output(message)
        })


        function output(msg) {
            var div = document.createElement('div')
            div.className = "input"
            var title = document.createElement('div')
            title.className = "text-title"
            div.appendChild(title)
            var name = document.createElement('p')
            var time = document.createElement('p')
            var text = document.createElement('div')
            name.className = "name"
            time.className = "Time"
            text.className = "text"
            name.innerHTML = msg.username
            time.innerHTML = msg.time
            text.innerHTML = msg.text
            title.appendChild(name)
            title.appendChild(time)
            div.appendChild(title)
            div.appendChild(text)
            var box = document.querySelector('#textBox')
            box.appendChild(div)
            box.scrollTop = box.scrollHeight
        }

        function formatMessage(username, text) {

            var today = new Date()
            var hours = today.getHours()
            if (hours > 12) {
                hours -= 12
            }
            var min = today.getMinutes()
            if (min < 10) { min = "0" + min.toString() }
            var time = hours + ":" + min

            return {
                "username": username,
                "text": text,
                "time": time
            }
        }

    </script>

</body>

</html>