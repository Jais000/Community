<!DOCTYPE html>

<head>
    <link href="/css/communityhome.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">


</head>

<body>
    <div class='navbar'>
        <div class="leftLinks">
            <h3>Community</h3>
            <a id="home" href="/">Home</a>
        </div>
        <div class="search">
            <form action="/search" method="POST">
                <input name="search" id="search" placeholder="Search for Communities!">
            </form>
        </div>
        <div class="rightLinks">
            <a id="settings">Settings</a>
            <a id="account">Account</a>
            <form action=" /signout" method="POST">
            <button >Sign Out</button>
            </form>
        </div>
    </div>
    <div class="col">
        <h1>Welcome to <%=name%>
        </h1>
        <div class="sidebar">
            <div>


                <a class="link" href=<%="/chat/:" +id%>>Chatroom</a>
                <a class="link" href=<%="/forum/:"+forumId%>>Forum</a>
                <a class="link" href=<%="/members/:"+id%>>Members</a>
                <form>
                <button class="link" method="POST" action=<%="/join/:"+id%>>Join Community</button>
                </form>
            </div>
        </div>
    </div>
    <!-- VIEW -->
    <div class="container">
        <div class="container-cal">
            <div class='col-8'>
                <div class="card-text">
                    <div class="calendar"></div>
                    <div class='control-container'></div>
                </div>
            </div>
            <div class='col-4'>
                <div class="card border-light mb-3" style="max-width: 18rem;">
                    <div class="card-header">Your Day</div>
                    <div class="card-body">
                        <h5 class="day-title">Monday</h5>
                        <p class="card-map"></p>
                    </div>
                </div>
            </div>
        </div>

        <!--Event Entry-->
        <div class="row">
            <div class="col-3">
                <form action=<%="/create_event/:" +id%> encType="multipart/form-data" method="POST">
                    <h5 class="createTitle">Create an Event</h5>

                    <input required="true" type="text" class="text" id="name" name="name" placeholder="Title"><br>


                    <input required="true" class="input date" type="date" id="date" name="date" placeholder="Date"><br>


                    <div class=" times">

                        <span>start</span>
                        <input required="true" class="input time" type="time" id="startTime" name="startTime"
                            placeholder="Start Time">

                        <span>end</span>
                        <input required="true" class="input time" type="time" id="endTime" name="endTime"
                            placeholder="End Time">

                    </div>

                    <input class="input text" type="text" id="loc" name="loc" placeholder="location"><br>

                    <input class="input text" type="text" id="description" name="description" placeholder="Details"><br>

                    <input onchange="readFile(this)" class="input file" type="file" id="attachment" name="attachment"
                        placeholder="Attachments"><br>

                    <button class="submit">Submit</button>

                </form>

            </div>
            <div class="col">
                <div class='upcoming-events'>
                    <h5 class="upcomingTitle">Upcoming Events</h5>
                    <div class="eventLog">

                    </div>
                </div>
            </div>

        </div>
    </div>





    <script>
        var stc = 0
        var lstc = 0
        var names = '<%-eventNames%>'
        //SCRIPT///////////////////////////////////////////////////////////////////////
        //UPLOAD///////////////////////////////////////////////////////////////////////
        N = 0
        const height = 415;
        function monthLength(n) {
            return months[Object.keys(months)[n]]['length']
        }


        function readFile(input) {
            let file = input.files[0]
            let fileReader = new FileReader();
            fileReader.readAsText(file);
            fileReader.onload = function (e) {
                document.getElementById("result").src = e.target.result
                document.querySelector("#result").style.width = "150px"
                document.querySelector("#result").style.height = "150px"
                fileReader.readAsDataURL(input.files[0])
            };
        }

        const currentDate = new Date()
        const year = currentDate.getFullYear()
        var currentDay = currentDate.getDate()
        var currentMonth = currentDate.getMonth()
        var dayWeek = currentDate.getDay()
        var eventDates = '<%-eventDates%>'
        var startTimes = '<%-eventStartTimes%>'
        var endTimes = '<%-eventEndTimes%>'
        var locs = '<%-eventLocs%>'
        var details = '<%-eventDetails%>'
        var files = '<%-eventFiles%>'
        var names = '<%-eventNames%>'
        var eventIds = '<%-eventIds%>'
        var status = '<%-status%>'
        const months = {
            January: { length: 31 },
            February: { length: 28 },
            March: { length: 31 },
            April: { length: 30 },
            May: { length: 31 },
            June: { length: 30 },
            July: { length: 31 },
            August: { length: 31 },
            September: { length: 30 },
            October: { length: 31 },
            November: { length: 30 },
            December: { length: 31 }
        }
        const weekDays = {
            0: 'Sunday',
            1: 'Monday',
            2: 'Tuesday',
            3: 'Wednesday',
            4: 'Thursday',
            5: 'Friday',
            6: 'Saturday'
        }
        function findDay() {
            const base = { '2023-8-29': 'Tuesday' }
            var yearsSince = year - 2023
            var monthsSince = currentMonth - 8
            var daysSince = currentDay - 29

            Object.keys(base).split('-')[1]
            thisDay
        }




        ////////////////////MODAL///////////////////////////


        eventDates = eventDates.split(',')
        startTimes = startTimes.split(',')
        endTimes = endTimes.split(',')
        locs = locs.split(',')
        details = details.split(',')
        files = files.split(',')
        names = names.split(',')






        ///////////////UPCOMING EVENTS///////////////////
        for (var i = 0; i < names.length; i++) {
            if (eventDates[i].split('-')[0] >= year &&
                eventDates[i].split('-')[1] - 1 == currentMonth &&
                eventDates[i].split('-')[2] >= currentDay) {
                var card = document.createElement('div')
                card.className = "card border-light mb-3 d-flex p-2"

                card.className = `c-${i}`
                card.style.maxWidth = '16rem'
                card.style.minWidth = '8rem'
                card.style.justifyContent = "space-around";
                var cardBody = document.createElement("div")
                card.style.display.backgroundColor = 'black';
                cardBody.className = `card-body ${i}`
                var cardTitle = document.createElement("div")
                cardTitle.className = `card-title ${i}`

                var cardText = document.createElement("div")
                cardText.className = 'card-text'

                var cardDate = document.createElement("div")
                var cardTimes = document.createElement("div")
                var start = document.createElement("div")
                var end = document.createElement("div")
                cardDate.innerHTML = eventDates[i]
                cardTimes.appendChild(start)
                cardTimes.appendChild(end)
                cardText.appendChild(cardDate)
                cardText.appendChild(cardTimes)
                cardTimes.style.display = 'flex'
                start.innerHTML = startTimes[i]
                end.innerHTML = endTimes[i]

                cardTitle.innerHTML = names[i]

                cardBody.appendChild(cardTitle)
                cardBody.appendChild(cardText)
                card.appendChild(cardBody)
                document.querySelector('.eventLog').appendChild(card)

                var modal = document.createElement('div')
                modal.style.display = "none";
                modal.className = `m${i}`
                card.onclick = function (event) {

                    var h1 = document.createElement('h1')
                    document.querySelector(`.m${event.target.className.split(' ')[1]}`).style.display = "block";
                    var mod = document.querySelector(`.m${event.target.className.split(' ')[1]}`)
                    mod.style.width = '30%';
                    mod.style.margin = '0 auto';
                    mod.style.position = 'fixed';
                    mod.style.top = '35%';
                    mod.style.left = '35%';
                    mod.style.height = '30%';
                    mod.style.zIndex = '100';
                    mod.style.backgroundColor = '#f2f2f2';

                }
                var mC = document.createElement('div')
                var clos = document.createElement('span')
                clos.innerHTML = '&times;'
                clos.className = `cl ${i}`
                clos.onclick = function (event) {
                    document.querySelector(`.m${event.target.className.split(' ')[1]}`).style.display = "none";
                }
                var cont = document.createElement('div')
                cont.innerHTML = names[i]
                var file = document.createElement('img')
                file.src = "data:image/png;base64," + files[i]
                modal.appendChild(mC)
                mC.appendChild(clos)
                mC.appendChild(cont)
                mC.appendChild(file)
                document.querySelector('.eventLog').appendChild(modal)
            }
        }
        function modal(i) {
            document.querySelector(`${i}`).style.display = "block";
        }
        function cls() {
            document.querySelector(`${i}`).style.display = "none";
        }


        //getting the current year and date

        /*                     const currentDate = new Date();
                            const year = currentDate.getFullYear() */
        var currentDay = currentDate.getDate();
        var currentMonth = currentDate.getMonth();
        var htmldate = document.createElement("h5");
        var yr = year
        var addyears = year - 2023

        function viewScroll() {
            window.scrollTo(0, 200)
        }
        function contactsScroll() {
            window.scrollTo(0, 20000)
        }
        function commsScroll() {
            window.scrollTo(0, 1300)
        }
        var n = currentMonth;

        monthNames = Object.keys(months)


        var c = 0;
        var next = document.createElement("button")
        next.innerHTML = '<img src="/Assets/arrow.png">'

        var prev = document.createElement("button")
        prev.innerHTML = '<img src="/Assets/leftarrow.png">'

        prev.className = 'Button'
        next.className = 'Button'
        var control = document.createElement("div")
        control.className = "control"
        control.appendChild(prev)
        control.appendChild(next)


        function createCal(n, y) {
            htmldate.innerHTML = yr + addyears
            var calTitle = document.createElement("div")
            c = 0
            var cal = document.createElement('div')
            cal.className = 'cal';
            var name = document.createElement("h3")
            name.innerHTML = monthNames[n]
            calTitle.appendChild(name)
            calTitle.appendChild(htmldate)
            cal.appendChild(calTitle)
            calTitle.className = "calTitle";



            for (var i = 0; i < Math.ceil(months[`${monthNames[n]}`].length / 7); i++) {
                var week = document.createElement("div")
                week.className = "weekDiv"
                for (var j = 0; j < 7 && c < months[`${monthNames[n]}`].length; j++) {
                    var day = document.createElement("div")
                    ////////////////////
                    /*                                 const currentDate = new Date()
                                                    const year = currentDate.getFullYear()
                                                    var currentDay = currentDate.getDate()
                                                    var currentMonth = currentDate.getMonth()
                                                    var dayWeek = currentDate.getDay() */

                    day.className = `day-${c}`
                    day.style.margin = '10px'
                    day.style.width = '80px';
                    day.style.height = '80px'
                    week.appendChild(day)
                    var setTime = ""
                    ///////////////////////////////////YOUR DAY////////////////////////////////////////////////
                    day.onclick = function (event) {


                        var thisDay = parseInt(event.target.className.split('-')[1]) + 1

                        dayWeek = currentDate.getDay()

                        var totDays = 0
                        var totalMid = 0

                        if (Math.abs(N) <= 1) {
                            if (N > 0) {
                                totDays = monthLength(n) - currentDay + thisDay + 1
                            }
                            if (N < 0) {
                                totDays = currentDay + monthLength(n) - thisDay
                            }
                            if (N == 0) {
                                totDays = thisDay - currentDay
                            }
                        }

                        if (N > 1) {
                            var m = currentMonth + 1
                            if (m == -1) { m = 11 }
                            for (var i = 0; i < N - 1; i++) {
                                totalMid += monthLength(m)
                                m++
                                if (m == 12) { m = 0 }
          
                            }
                            totDays = monthLength(currentMonth) - currentDay + totalMid + thisDay

                        }
                        else if (N < -1) {
                            var m = n + 1
                            if (m == 12) { m = 0 }
                            for (var i = 0; i > N + 1; i--) {
                                totalMid += monthlength(m)
                                m--
                                if (m == -1) { m = 11 }
                            }
                            totDays = currentDay + totalMid + monthLength(n) - thisDay
                        }

                        var dw = dayWeek

                        for (var i = 0; i < Math.abs(totDays); i++) {
                            if (N > 0) {
                                dw += 1
                                if (dw == 7) { dw = 0 }
                            }
                            if (N < 0) {
                                dw -= 1
                                if (dw == -1) { dw = 6 }
                            }
                            if (N == 0) {
                                if (thisDay - currentDay > 0) {
                                    dw += 1
                                    if (dw == 7) { dw = 0 }
                                }
                                if (thisDay - currentDay < 0) {
                                    dw -= 1
                                    if (dw == -1) { dw = 6 }
                                }
                            }
                        }



                        if (document.getElementsByClassName('t').length > 0) {
                            document.querySelector('.t').remove()
                        }
                        var map = document.querySelector('.card-map')
                        var cont = document.createElement('div')

                        cont.className = 't'
                        cont.style.height = '100%'
                        cont.style.position = "relative"
                        var hr = 12
                        for (var i = 0; i < 24; i++) {


                            var t = document.createElement('p')
                            t.innerHTML = hr
                            t.style.textAlign = "left";
                            t.style.fontSize = "12px"
                            t.style.color = "gray"
                            var hour = document.createElement('div')

                            hour.appendChild(t)

                            hr++
                            if (hr > 12) { hr = 1 }
                            cont.appendChild(hour)
                            hour.className = `${i + 1}`
                            hour.style.borderBottom = "gray solid 1px";
                            hour.style.height = `${100 / 24}%`
                            map.appendChild(cont)


                        }


                        for (var k = 0; k < '<%-eventDates%>'.split(',').length; k++) {


                            if (parseInt(String('<%-eventDates%>'.split(',')[k].split('-')[2])) == parseInt(thisDay) &&
                                parseInt(String('<%-eventDates%>'.split(',')[k].split('-')[1])) == N + n + 1 &&
                                parseInt(String('<%-eventDates%>'.split(',')[k].split('-')[0])) == yr
                            ) {

                                startTimes = '<%-eventStartTimes%>'.split(',')[k]
                                endTimes = '<%-eventEndTimes%>'.split(',')[k]

                                var startValue = parseFloat(startTimes.split(':')[1] / 60) + parseFloat(startTimes.split(':')[0])
                                var endValue = parseFloat(endTimes.split(':')[0]) + parseFloat(endTimes.split(':')[1] / 60)
                                var h1 = document.createElement('h1')


                                var overLine = document.createElement('div')
                                overLine.id = `ol-${k}`
                                var total = endValue - startValue
                                var height = (total / 24) * 415
                                var top = (startValue / 24) * 415
                                var line = document.createElement('div')
                                line.className = `l-${k}`
                                h1.innerHTML = height

                                var upperTab = document.createElement('div')
                                var lowerTab = document.createElement('div')
                                upperTab.className = `ut-${k}`
                                lowerTab.className = `lt-${k}`
                                upperTab.style.backgroundColor = "black"
                                lowerTab.style.backgroundColor = 'green'
                                lowerTab.style.position = 'relative';
                                upperTab.style.position = 'relative';
                                upperTab.style.height = '10px'
                                lowerTab.style.height = '10px'
                                upperTab.style.zIndex = 2;
                                lowerTab.style.zIndex = 2
                                overLine.appendChild(upperTab)
                                overLine.appendChild(line)
                                overLine.appendChild(lowerTab)


                                line.style.height = '100%'
                                line.style.position = 'relative'
                                overLine.style.border = '1px solid black'
                                overLine.style.width = '100%';
                                overLine.style.height = `${height}px`;
                                overLine.style.position = 'absolute';
                                overLine.style.top = `${top}px`
                                overLine.style.zIndex = 1;
                                overLine.style.opacity = "40%";

                                line.style.backgroundColor = 'goldenrod';
                                cont.appendChild(overLine)

                                //////////////////DRAG////////////////
                                if(status == 1){
                                upperTab.onclick = function (e) {
                                    dragUpperTab(document.querySelector(`.${e.target.className}`))
                                    var h1 = document.createElement('h1')
                                    h1.innerHTML = e.target.className
                                    
                                }
                                function dragUpperTab(elm) {

                                    var pos1 = 0
                                    var pos2 = 0
                                    var pos3 = 0
                                    var pos4 = 0
                                    var h1 = document.createElement('h1')
                                    h1.innerHTML = 'upper'
                                    //document.body.appendChild(h1)
                                    elm.onmousedown = dragMouseDown;
                                    function dragMouseDown(e) {


                                        pos4 = e.clientY;
                                        document.onmouseup = closeDragElement;
                                        // call a function whenever the cursor moves:
                                        document.onmousemove = uelementDrag;


                                    }

                                    function uelementDrag(e) {
                                        //getting id//
                                        //location.assign(`/edit/:${eventIds.split(',')[elm.className.split('-')[1]]}`)

                                        pos2 = pos4 - e.clientY;


                                        pos4 = e.clientY
                                        document.querySelector(`#ol-${elm.className.split('-')[1]}`).style.height = (parseInt(document.querySelector(`#ol-${elm.className.split('-')[1]}`).style.height) + pos2).toString() + 'px'

                                        // set the element's new position:
                                        document.querySelector(`#ol-${elm.className.split('-')[1]}`).style.top = (document.querySelector(`#ol-${elm.className.split('-')[1]}`).offsetTop - pos2) + "px";
                                        //finding time//
                                        var ol = document.querySelector(`#ol-${elm.className.split('-')[1]}`)
                                        var st = (ol.offsetTop / 415) * 24
                                        var stm = parseInt(parseFloat("0." + (st.toString().split('.')[1])) * 60)
                                        var stmc = stm > 10 ? stm.toString() : '0' + stm.toString()
                                        var h1 = document.createElement('h1')
                                        stc = (st - 1).toString().split('.')[0] + ":" + stmc

                                        var lst = ((ol.offsetTop + parseInt(ol.style.height)) / 415) * 24
                                        var lm = parseInt(parseFloat('0.' + (lst.toString().split('.')[1]).toString()) * 60)
                                        var lmc = lm >= 10 ? lm.toString() : '0' + lm.toString()
                                        lstc = lst.toString().split('.')[0] + ":" + lmc
                               

                                    }
                                    function closeDragElement() {

                                        s = { id: `${eventIds.split(',')[elm.className.split('-')[1]]}`, st: stc, et: lstc }

                                        var req = new XMLHttpRequest();
                                        //var formdata = new FormData(s);
                                        req.open("POST", "/editCommunityEvent", true);
                                        req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=utf-8')
                                        req.send(JSON.stringify(s));


                                        /* stop moving when mouse button is released:*/
                                        document.onmouseup = null;
                                        document.onmousemove = null;
                                    }
                                }


                                lowerTab.onclick = function (e) {
                                    dragLowerTab(document.querySelector(`.${e.target.className}`))
                                    
                                }
                                function dragLowerTab(elm) {
                                    var pos1 = 0
                                    var pos2 = 0
                                    var pos3 = 0
                                    var pos4 = 0
                                    elm.onmousedown = dragMouseDown;
                                    function dragMouseDown(e) {
                                        pos4 = e.clientY;
                                        document.onmouseup = closeDragElement;
                                        // call a function whenever the cursor moves:
                                        document.onmousemove = lElementDrag;

                                    }
                                    function lElementDrag(e) {

                                        pos2 = pos4 - e.clientY;
                                        pos4 = e.clientY;
                                        document.querySelector(`#ol-${elm.className.split('-')[1]}`).style.height = `${parseInt(document.querySelector(`#ol-${elm.className.split('-')[1]}`).style.height) - pos2}px`

                                        var ol = document.querySelector(`#ol-${elm.className.split('-')[1]}`)
                                        var st = (ol.offsetTop / 415) * 24
                                        var stm = parseInt(parseFloat("0." + (st.toString().split('.')[1])) * 60)
                                        var stmc = stm > 10 ? stm.toString() : '0' + stm.toString()
                                        var h1 = document.createElement('h1')
                                        stc = (st - 1).toString().split('.')[0] + ":" + stmc

                                        var lst = ((ol.offsetTop + parseInt(ol.style.height)) / 415) * 24
                                        var lm = parseInt(parseFloat('0.' + (lst.toString().split('.')[1]).toString()) * 60)
                                        var lmc = lm >= 10 ? lm.toString() : '0' + lm.toString()
                                        lstc = lst.toString().split('.')[0] + ":" + lmc
                                        
                                    }
                                    function closeDragElement() {

                                        s = { id: `${eventIds.split(',')[elm.className.split('-')[1]]}`, st: stc, et: lstc }

                                        var req = new XMLHttpRequest();
                                        //var formdata = new FormData(s);
                                        req.open("POST", "/editCommunityEvent", true);
                                        req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=utf-8')
                                        req.send(JSON.stringify(s));


                                        /* stop moving when mouse button is released:*/
                                        document.onmouseup = null;
                                        document.onmousemove = null;
                                    }
                                }

                                line.onclick = function (e) {
                                    dragLine(document.querySelector(`.${e.target.className}`))
                                }

                                function dragLine(elm) {
                                    var pos1 = 0
                                    var pos2 = 0
                                    var pos3 = 0
                                    var pos4 = 0;
                                    elm.onmousedown = dragMouseDown;
                                    function dragMouseDown(e) {
                                        pos3 = e.clientX;
                                        pos4 = e.clientY;
                                        document.onmouseup = closeDragElement;
                                        // call a function whenever the cursor moves:
                                        document.onmousemove = elementDrag;

                                    }
                                    function elementDrag(e) {
                                        pos1 = pos3 - e.clientX;
                                        pos2 = pos4 - e.clientY;
                                        pos4 = e.clientY;
                                        pos4 = e.clientY;
                                        // set the element's new position:
                                        document.querySelector(`#ol-${elm.className.split('-')[1]}`).style.top = (document.querySelector(`#ol-${elm.className.split('-')[1]}`).offsetTop - pos2) + "px";

                                        //getting time
                                        var ol = document.querySelector(`#ol-${elm.className.split('-')[1]}`)
                                        var st = (ol.offsetTop / 415) * 24
                                        var stm = parseInt(parseFloat("0." + (st.toString().split('.')[1])) * 60)
                                        var stmc = stm > 10 ? stm.toString() : '0' + stm.toString()
                                        var h1 = document.createElement('h1')
                                        stc = (st - 1).toString().split('.')[0] + ":" + stmc

                                        var lst = ((ol.offsetTop + parseInt(ol.style.height)) / 415) * 24
                                        var lm = parseInt(parseFloat('0.' + (lst.toString().split('.')[1]).toString()) * 60)
                                        var lmc = lm >= 10 ? lm.toString() : '0' + lm.toString()
                                        lstc = lst.toString().split('.')[0] + ":" + lmc
                                   
                                    }
                                    function closeDragElement() {
                                        s = { id: `${eventIds.split(',')[elm.className.split('-')[1]]}`, st: stc, et: lstc }

                                        var req = new XMLHttpRequest();
                                        //var formdata = new FormData(s);
                                        req.open("POST", "/editCommunityEvent", true);
                                        req.setRequestHeader('Content-type', 'application/x-www-form-urlencoded; charset=utf-8')
                                        req.send(JSON.stringify(s));

                                        /* stop moving when mouse button is released:*/
                                        document.onmouseup = null;
                                        document.onmousemove = null;
                                    }
                                }
                            }}

                        }


                     
                        var h1 = document.createElement('h1')
                        h1.innerHTML = getComputedStyle(cont.parentElement).height
                        
                        dayName = weekDays[dw]
                        document.querySelector('.day-title').innerHTML = dayName
                    }


                    var number = document.createElement("span")
                    day.innerHTML = c + 1;
                    day.appendChild(number)
                    for (var k = 0; k < '<%-eventDates%>'.split(',').length; k++) {
                        if (c + 1 == currentDay &&
                            n == currentMonth &&
                            yr == year) {
                            day.style.backgroundColor = "rgba(0,0,0,0.05)"
                            day.style.borderBottom = "solid"
                        }
                        if (parseInt(String('<%-eventDates%>'.split(',')[k].split('-')[2])) == c + 1 &&
                            parseInt(String('<%-eventDates%>'.split(',')[k].split('-')[1])) == n + 1 &&
                            parseInt(String('<%-eventDates%>'.split(',')[k].split('-')[0])) == yr
                        ) {

                            startTimes = '<%-eventStartTimes%>'.split(',')[k]
                            endTimes = '<%-eventEndTimes%>'.split(',')[k]

                            var startValue = parseFloat(startTimes.split(':')[1] / 60) + parseFloat(startTimes.split(':')[0])
                            var endValue = parseFloat(endTimes.split(':')[0]) + parseFloat(endTimes.split(':')[1] / 60)

                            var total = endValue - startValue
                            var height = (total / 24) * 45
                            var top = 45 * (startValue / 24)
                            var line = document.createElement('div')
                            line.style.width = '100%';
                            line.style.height = `${height}px`
                            line.style.position = 'relative';
                            line.style.top = `${top}px`
                            line.style.backgroundColor = 'goldenrod';
                            day.appendChild(line)
                            day.onClick = function (event) {
                                day.style.backgroundColor = 'black'
                            }



                            day.appendChild(line)

                        }

                    }
                    c++

                }
                cal.appendChild(week)

            }
            document.querySelector(".control-container").appendChild(control)
            document.querySelector(".calendar").appendChild(cal)
            ///////////////////////////////////
        }

        createCal(currentMonth, addyears)
        var daysApart = 0
        var daysTillEnd = months[Object.keys(months)[n]] - currentDay
        next.onclick = function () {



            n++

            document.querySelector('.cal').remove()
            if (n == 12) { n = 0; yr += 1 }
            createCal(n)



            N++



        }
        prev.onclick = function () {

            n--
            document.querySelector('.cal').remove()
            if (n == -1) { n = 11; yr -= 1 }
            createCal(n)

            N--



        }

    </script>

</body>

</html>